import streamlit as st
import random
import json
import os
from gtts import gTTS

# ---------------------------
# Laden der Vokabeln
# ---------------------------
vocab = [
    ("–∏", "and"), ("–≤", "in"), ("–Ω–µ", "not"), ("–æ–Ω", "he"), ("–Ω–∞", "on, at"),
    ("—è", "I"), ("—á—Ç–æ", "what, that"), ("—Ç–æ—Ç", "that"), ("–±—ã—Ç—å", "to be"),
    ("—Å", "with"), ("–∞", "but"), ("–≤–µ—Å—å", "all"), ("—ç—Ç–æ", "this, it"),
    ("–∫–∞–∫", "how, like"), ("–æ–Ω–∞", "she"), ("–ø–æ", "along, by, according to"),
    ("–Ω–æ", "but"), ("–æ–Ω–∏", "they"), ("–∫", "to"), ("—É", "at, by"),
    ("—Ç—ã", "you (informal)"), ("–∏–∑", "from, out of"), ("–º—ã", "we"),
    ("–∑–∞", "behind, for"), ("–≤—ã", "you (formal or plural)"), ("—Ç–∞–∫", "so, thus"),
    ("–∂–µ", "same, also"), ("–æ—Ç", "from, of"), ("—Å–∫–∞–∑–∞—Ç—å", "to say"),
    ("—ç—Ç–æ—Ç", "this"), ("–∫–æ—Ç–æ—Ä—ã–π", "which, who"), ("–º–æ—á—å", "can, to be able"),
    ("—á–µ–ª–æ–≤–µ–∫", "person"), ("–æ", "about"), ("–æ–¥–∏–Ω", "one"), ("–µ—â—ë", "still, yet"),
    ("–±—ã", "would"), ("—Ç–∞–∫–æ–π", "such"), ("—Ç–æ–ª—å–∫–æ", "only"), ("—Å–µ–±—è", "oneself"),
    ("—Å–≤–æ—ë", "one's own"), ("–∫–∞–∫–æ–π", "what kind, which"), ("–∫–æ–≥–¥–∞", "when"),
    ("—É–∂–µ", "already"), ("–¥–ª—è", "for"), ("–≤–æ—Ç", "here is, there is"),
    ("–∫—Ç–æ", "who"), ("–¥–∞", "yes"), ("–≥–æ–≤–æ—Ä–∏—Ç—å", "to speak, say"),
    ("–≥–æ–¥", "year"), ("–∑–Ω–∞—Ç—å", "to know"), ("–º–æ–π", "my"), ("–¥–æ", "until, before"),
    ("–∏–ª–∏", "or"), ("–µ—Å–ª–∏", "if"), ("–≤—Ä–µ–º—è", "time"), ("—Ä—É–∫–∞", "hand"),
    ("–Ω–µ—Ç", "no, not"), ("—Å–∞–º—ã–π", "most, the very"), ("–Ω–∏", "neither, nor"),
    ("—Å—Ç–∞—Ç—å", "to become"), ("–±–æ–ª—å—à–æ–π", "big"), ("–¥–∞–∂–µ", "even"),
    ("–¥—Ä—É–≥–æ–π", "other"), ("–Ω–∞—à", "our"), ("–ø–æ–¥", "under"), ("–≥–¥–µ", "where"),
    ("–¥–µ–ª–æ", "matter, affair"), ("–µ—Å—Ç—å", "to be, to have (there is)"),
    ("—Ö–æ—Ä–æ—à–æ", "well, good"), ("–Ω–∞–¥–æ", "need to"), ("—Ç–æ–≥–¥–∞", "then"),
    ("—Å–µ–π—á–∞—Å", "now"), ("—Å–∞–º", "self"), ("—á—Ç–æ–±—ã", "in order to, so that"),
    ("—Ä–∞–∑", "time, once"), ("–¥–≤–∞", "two"), ("—Ç–∞–º", "there"), ("—á–µ–º", "than"),
    ("–≥–ª–∞–∑", "eye"), ("–∂–∏–∑–Ω—å", "life"), ("–ø–µ—Ä–≤—ã–π", "first"), ("–¥–µ–Ω—å", "day"),
    ("—Ç—É—Ç", "here"), ("–≤–æ", "in (variant of '–≤')"), ("–Ω–∏—á–µ–≥–æ", "nothing"),
    ("–ø–æ—Ç–æ–º", "then, later"), ("–æ—á–µ–Ω—å", "very"), ("—Å–æ", "with (variant of '—Å')"),
    ("—Ö–æ—Ç–µ—Ç—å", "to want"), ("–ª–∏—Ü–æ", "face"), ("–ø–æ—Å–ª–µ", "after"),
    ("–Ω–æ–≤—ã–π", "new"), ("–±–µ–∑", "without"), ("–≥–æ–≤–æ—Ä–∏—Ç—å", "to speak"),
    ("—Ö–æ–¥–∏—Ç—å", "to go (by foot, regularly)"), ("–¥—É–º–∞—Ç—å", "to think"),
    ("—Å–ø—Ä–æ—Å–∏—Ç—å", "to ask"), ("–≤–∏–¥–µ—Ç—å", "to see"), ("—Å—Ç–æ—è—Ç—å", "to stand")
]

# ---------------------------
# Hilfsfunktionen
# ---------------------------
def play_audio(text, lang="ru"):
    tts = gTTS(text, lang=lang)
    tts.save("audio.mp3")
    audio_file = open("audio.mp3", "rb")
    audio_bytes = audio_file.read()
    st.audio(audio_bytes, format="audio/mp3")

def get_random_choices(correct, all_words, key):
    choices = [correct]
    while len(choices) < 4:
        word = random.choice(all_words)[key]
        if word not in choices:
            choices.append(word)
    random.shuffle(choices)
    return choices

# ---------------------------
# Session State
# ---------------------------
if "index" not in st.session_state:
    st.session_state.index = 0
    st.session_state.correct = 0
    st.session_state.total = 0
    st.session_state.streak = 0
    st.session_state.best_streak = 0
    st.session_state.mode = "Eingabe"

# ---------------------------
# UI: Einstellungen
# ---------------------------
st.title("üá∑üá∫ Russisch-Vokabeltrainer")
st.sidebar.title("Einstellungen")
num_cards = st.sidebar.slider("Wie viele Vokabeln lernen?", 5, len(vocab), 10)
mode = st.sidebar.radio("Lernmodus", ["Eingabe", "Multiple Choice"])
from_lang = st.sidebar.radio("Was wird gezeigt?", ["üá∑üá∫ Russisch", "üá©üá™ Deutsch"])
st.session_state.mode = mode

# ---------------------------
# Lernlogik
# ---------------------------
vocab_subset = vocab[:num_cards]
current_word = vocab_subset[st.session_state.index % len(vocab_subset)]

source = "ru" if from_lang == "üá∑üá∫ Russisch" else "de"
target = "de" if source == "ru" else "ru"

st.markdown(f"### {current_word[source]}")
if st.button("üîä Aussprache anh√∂ren"):
    play_audio(current_word[source], lang=source)

user_input = ""
correct = current_word[target]

if st.session_state.mode == "Eingabe":
    user_input = st.text_input("√úbersetzung eingeben:")
    if st.button("Pr√ºfen"):
        st.session_state.total += 1
        if user_input.strip().lower() == correct.lower():
            st.success("‚úÖ Richtig!")
            st.session_state.correct += 1
            st.session_state.streak += 1
            st.session_state.best_streak = max(st.session_state.streak, st.session_state.best_streak)
        else:
            st.error(f"‚ùå Falsch. Richtig w√§re: {correct}")
            st.session_state.streak = 0
        st.session_state.index += 1
        st.experimental_rerun()

elif st.session_state.mode == "Multiple Choice":
    choices = get_random_choices(correct, vocab_subset, target)
    answer = st.radio("W√§hle die richtige √úbersetzung:", choices)
    if st.button("Antwort pr√ºfen"):
        st.session_state.total += 1
        if answer == correct:
            st.success("‚úÖ Richtig!")
            st.session_state.correct += 1
            st.session_state.streak += 1
            st.session_state.best_streak = max(st.session_state.streak, st.session_state.best_streak)
        else:
            st.error(f"‚ùå Falsch. Richtig w√§re: {correct}")
            st.session_state.streak = 0
        st.session_state.index += 1
        st.experimental_rerun()

# ---------------------------
# Fortschrittsanzeige
# ---------------------------
st.sidebar.markdown(f"**Fortschritt**: {st.session_state.correct}/{st.session_state.total} korrekt")
st.sidebar.markdown(f"üî• Streak: {st.session_state.streak}")
st.sidebar.markdown(f"üèÜ Rekord: {st.session_state.best_streak}")
